{"ast":null,"code":"import { of } from 'rxjs';\nimport { catchError, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./twain.service\";\nimport * as i2 from \"@angular/common\";\nfunction TwainComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class TwainComponent {\n  constructor(twainService) {\n    this.twainService = twainService;\n  }\n  ngOnInit() {\n    this.getQuote();\n  }\n  getQuote() {\n    this.errorMessage = '';\n    this.quote = this.twainService.getQuote().pipe(startWith('...'), catchError(err => {\n      // Wait a turn because errorMessage already set once this turn\n      setTimeout(() => this.errorMessage = err.message || err.toString());\n      return of('...'); // reset message to placeholder\n    }));\n  }\n  static #_ = this.ɵfac = function TwainComponent_Factory(t) {\n    return new (t || TwainComponent)(i0.ɵɵdirectiveInject(i1.TwainService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TwainComponent,\n    selectors: [[\"twain-quote\"]],\n    decls: 7,\n    vars: 4,\n    consts: [[1, \"twain\"], [\"type\", \"button\", 3, \"click\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n    template: function TwainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 0)(1, \"i\");\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function TwainComponent_Template_button_click_4_listener() {\n          return ctx.getQuote();\n        });\n        i0.ɵɵtext(5, \"Next quote\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, TwainComponent_p_6_Template, 2, 1, \"p\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, ctx.quote));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i2.NgIf, i2.AsyncPipe],\n    styles: [\".twain[_ngcontent-%COMP%] { font-style: italic; } .error[_ngcontent-%COMP%] { color: red; }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdHdhaW4vdHdhaW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsa0JBQWtCLEVBQUUsRUFBRSxTQUFTLFVBQVUsRUFBRSIsInNvdXJjZXNDb250ZW50IjpbIi50d2FpbiB7IGZvbnQtc3R5bGU6IGl0YWxpYzsgfSAuZXJyb3IgeyBjb2xvcjogcmVkOyB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["of","catchError","startWith","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","TwainComponent","constructor","twainService","ngOnInit","getQuote","quote","pipe","err","setTimeout","message","toString","_","ɵɵdirectiveInject","i1","TwainService","_2","selectors","decls","vars","consts","template","TwainComponent_Template","rf","ctx","ɵɵlistener","TwainComponent_Template_button_click_4_listener","ɵɵtemplate","TwainComponent_p_6_Template","ɵɵpipeBind1","ɵɵproperty"],"sources":["C:\\Users\\leon\\Documents\\project\\angular-app\\angular-sample-app\\src\\app\\twain\\twain.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, startWith } from 'rxjs/operators';\r\n\r\nimport { TwainService } from './twain.service';\r\n\r\n@Component({\r\n  selector: 'twain-quote',\r\n  template: `\r\n    <p class=\"twain\"><i>{{quote | async}}</i></p>\r\n    <button type=\"button\" (click)=\"getQuote()\">Next quote</button>\r\n    <p class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</p>`,\r\n  styles: [\r\n    '.twain { font-style: italic; } .error { color: red; }'\r\n  ]\r\n\r\n})\r\nexport class TwainComponent implements OnInit {\r\n  errorMessage!: string;\r\n  quote!: Observable<string>;\r\n\r\n  constructor(private twainService: TwainService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getQuote();\r\n  }\r\n\r\n  getQuote() {\r\n    this.errorMessage = '';\r\n    this.quote = this.twainService.getQuote().pipe(\r\n      startWith('...'),\r\n      catchError( (err: any) => {\r\n        // Wait a turn because errorMessage already set once this turn\r\n        setTimeout(() => this.errorMessage = err.message || err.toString());\r\n        return of('...'); // reset message to placeholder\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/"],"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,EAAEC,SAAS,QAAQ,gBAAgB;;;;;;IASlDC,EAAA,CAAAC,cAAA,WAAsC;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAtBH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,YAAA,CAAkB;;;AAM5D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;EAAiB;EAEjDC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN,IAAI,CAACL,YAAY,GAAG,EAAE;IACtB,IAAI,CAACM,KAAK,GAAG,IAAI,CAACH,YAAY,CAACE,QAAQ,EAAE,CAACE,IAAI,CAC5Cf,SAAS,CAAC,KAAK,CAAC,EAChBD,UAAU,CAAGiB,GAAQ,IAAI;MACvB;MACAC,UAAU,CAAC,MAAM,IAAI,CAACT,YAAY,GAAGQ,GAAG,CAACE,OAAO,IAAIF,GAAG,CAACG,QAAQ,EAAE,CAAC;MACnE,OAAOrB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACH;EACH;EAAC,QAAAsB,CAAA,G;qBApBUX,cAAc,EAAAR,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdf,cAAc;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QARvB9B,EAAA,CAAAC,cAAA,WAAiB;QAAGD,EAAA,CAAAE,MAAA,GAAiB;;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACzCH,EAAA,CAAAC,cAAA,gBAA2C;QAArBD,EAAA,CAAAgC,UAAA,mBAAAC,gDAAA;UAAA,OAASF,GAAA,CAAAnB,QAAA,EAAU;QAAA,EAAC;QAACZ,EAAA,CAAAE,MAAA,iBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC9DH,EAAA,CAAAkC,UAAA,IAAAC,2BAAA,eAA4D;;;QAFxCnC,EAAA,CAAAI,SAAA,GAAiB;QAAjBJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAoC,WAAA,OAAAL,GAAA,CAAAlB,KAAA,EAAiB;QAEnBb,EAAA,CAAAI,SAAA,GAAkB;QAAlBJ,EAAA,CAAAqC,UAAA,SAAAN,GAAA,CAAAxB,YAAA,CAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}